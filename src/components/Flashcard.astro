---
interface Props {
  front: string;
  back: string;
}

const { front, back } = Astro.props;
---

<div class="flashcard">
  <div class="flashcard-inner">
    <div class="flashcard-front">
      <p>{front}</p>
    </div>
    <div class="flashcard-back">
      <p>{back}</p>
    </div>
  </div>
</div>

<script>
  const flashcards = document.querySelectorAll('.flashcard');
  flashcards.forEach(card => {
    card.addEventListener('click', () => {
      card.classList.toggle('flipped');
    });
  });
</script>

<style>
  .flashcard {
    width: 300px;
    height: 200px;
    perspective: 1000px;
    margin-bottom: 1rem;
    cursor: pointer;
  }
  .flashcard-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
  }
  .flashcard.flipped .flashcard-inner {
    transform: rotateY(180deg);
  }
  .flashcard-front, .flashcard-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f0f0f0;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  .flashcard-back {
    transform: rotateY(180deg);
    background-color: rgb(var(--brun-light));
  }
</style>